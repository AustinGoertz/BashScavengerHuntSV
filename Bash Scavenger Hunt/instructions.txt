The goal of this activity is to get you navigating the directory of a computer
using bash commands, learning how to compile and execute code in various
programming languages, and to get you a deeper understanding of a computer's
filing system.

The theme of the game is that you are a programmer here on earth assisting with
the launch, navigation, and execution of a spaceship's mission to inspect 
various nearby planets with the potential to support life. The game has a few
tasks for you to complete:

Task 1:

We have been given a lot of loose files in the directory. We should organize
them into new directories using the mkdir and mv commands. There are three
categories: navigation, fuel, and launching. Make three separate folders and
put each file into its appropriate folder. The names of these folders are not
important to ensuring that the game works, but at the same time, they should
have a simple, yet descriptive, name.

After you complete this, it worth using the touch command in the home directory of 
the game (theBashGame) to make a file called directories.txt. Use pwd in the directory you are 
using for fuel and copy this directory into this text file using vim (see the bottom of the cheat sheet).

Repeat this process for launch and navigation once this is complete.
Use the graphical user interface or "GUI" for short to view this file; you will need to copy and
paste data from it. Think of this as the same way as opening up any other file on your computer.

Task 2:

Let's get the ship into space by first adding fuel to the ship by executing fuel_up.py.
Then, let's read our prelaunch_checklist and launch our rocket by compiling and
running launch.c. Finally, we can begin to navigate by running navigate.java with
Two command line arguments; the first being the directory where the fuel files are stored,
And the second being the directory where the launch data is stored. This is where the text file
directories.txt will come in handy.

Task 3:

Follow the clues.txt instructions generated by navigate.java. This will guide you to a directory with
200 planets to search and instructions on how to do so.

You will be left with one planet in the end.

